<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!--
  What It Checks
  
    1. Xml root is a graph.
    2. It has >=2 of nodes.
    3. It can't have >1 of start nodes, or finish nodes.
    5. Node's ids are positive unique integers.
    6. Node's links always reference existing nodes ids.
    7. Other stuff like required attributes checks.
    
  What It Doesn't Check
  
    1. Each link must have a corresponding reversed link with the same weight.
    2. There must be a start node and a finish node.
    These can't be done in XSD 1.0 for "co-occurrence constraints" or some other
    reasons.
-->  
  
<xs:complexType name="nodeType">
  <xs:sequence minOccurs="1" maxOccurs="unbounded">
    <xs:element name="link" type="linkType">
      <xs:keyref name="linksMustReferenceExistingNodesKeys" refer="nodesMustHaveIdsAsUniqueKeys">
        <xs:selector xpath="."/>
        <xs:field xpath="@ref"/>
      </xs:keyref>
    </xs:element>
  </xs:sequence>
  <xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
  <xs:attribute name="status">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="crash"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="role">
    <xs:simpleType>
      <xs:restriction base="xs:string">
        <xs:enumeration value="start"/>
        <xs:enumeration value="finish"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
</xs:complexType>

<xs:complexType name="linkType">
  <xs:attribute name="ref" type="xs:nonNegativeInteger" use="required"/>
  <xs:attribute name="weight" type="xs:nonNegativeInteger" use="required"/>
</xs:complexType>

<xs:element name="graph">
  <xs:complexType>
    <xs:choice>
      <xs:element minOccurs="2" maxOccurs="unbounded" name="node" type="nodeType">
        <xs:unique name="linksOfANodeMustHaveUniqueReferencesIfAny">
          <xs:selector xpath="link" />
          <xs:field xpath="@ref" />
        </xs:unique>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  
  <xs:key name="nodesMustHaveIdsAsUniqueKeys">
    <xs:selector xpath="node"/>
    <xs:field xpath="@id"/>
  </xs:key>

  <xs:unique name="nodesMustHaveUniqueRolesIfAny">
    <xs:selector xpath="node" />
    <xs:field xpath="@role" />
  </xs:unique>
</xs:element>

</xs:schema>